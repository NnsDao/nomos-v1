type UserInfo = 
 record {
   address: text;
   avatar: text;
   nickname: text;
   "principal": principal;
   reputation: nat;
   signature: text;
 };
type UserBaseInfo = 
 record {
   address: text;
   avatar: text;
   nickname: text;
   "principal": principal;
   signature: text;
 };
type User = 
 service {
   addOwner: (principal) -> (Result);
   delOwner: (principal) -> (Result);
   getUserInfo: () -> (UserInfo);
   login: () -> (Result);
   owner: () -> (vec record {
                       principal;
                       nat64;
                     }) query;
   setUserInfo: (UserBaseInfo) -> (Result);
 };
type Result = 
 variant {
   err: text;
   ok: bool;
 };
service : () -> User
